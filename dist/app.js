"use strict";function e(e,t){for(var s=0;s<t.length;s++){var i=t[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var s=function(){function t(e,s){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._el="string"==typeof e?document.querySelector(e):e,this._params=s||{},this._onClickFn=this._onClick.bind(this),this._params.options&&(this._el.innerHTML=this.constructor.template(this._params),this._el.classList.add(this.constructor.EL)),this._elToggle=this._el.querySelector(this.constructor.DATA_TOGGLE),this._el.addEventListener("click",this._onClickFn)}var s,i,n;return s=t,n=[{key:"template",value:function(e){var t=this,s=e.name,i=e.options,n=e.targetValue,o=[],r=-1,c="",l="Выберите из списка";return i.forEach((function(e,s){var i="";e[0]===n&&(i=" ".concat(t.EL_OPTION_SELECTED),r=s,c=e[0],l=e[1]),o.push('<li class="itc-select__option'.concat(i,'" data-select="option"\n          data-value="').concat(e[0],'" data-index="').concat(s,'">').concat(e[1],"</li>"))})),'<button type="button" class="itc-select__toggle" name="'.concat(s,'"\n        value="').concat(c,'" data-select="toggle" data-index="').concat(r,'">\n        ').concat(l,'</button><div class="itc-select__dropdown">\n        <ul class="itc-select__options">').concat(o.join(""),"</ul></div>")}},{key:"hideOpenSelect",value:function(){var e=this;document.addEventListener("click",(function(t){t.target.closest(".".concat(e.EL))||document.querySelectorAll(".".concat(e.EL_SHOW)).forEach((function(t){t.classList.remove(e.EL_SHOW)}))}))}},{key:"create",value:function(e,t){return this._el="string"==typeof e?document.querySelector(e):e,this._el?new this(e,t):null}}],(i=[{key:"_onClick",value:function(e){var t=e.target,s=t.closest(this.constructor.DATA).dataset.select;"toggle"===s?this.toggle():"option"===s&&this._changeValue(t)}},{key:"_updateOption",value:function(e){var t=e.closest(".".concat(this.constructor.EL_OPTION)),s=this._el.querySelector(".".concat(this.constructor.EL_OPTION_SELECTED));return s&&s.classList.remove(this.constructor.EL_OPTION_SELECTED),t.classList.add(this.constructor.EL_OPTION_SELECTED),this._elToggle.textContent=t.textContent,this._elToggle.value=t.dataset.value,this._elToggle.dataset.index=t.dataset.index,this._el.dispatchEvent(new CustomEvent("itc.select.change")),this._params.onSelected&&this._params.onSelected(this,t),t.dataset.value}},{key:"_reset",value:function(){var e=this._el.querySelector(".".concat(this.constructor.EL_OPTION_SELECTED));return e&&e.classList.remove(this.constructor.EL_OPTION_SELECTED),this._elToggle.textContent="Выберите из списка",this._elToggle.value="",this._elToggle.dataset.index="-1",this._el.dispatchEvent(new CustomEvent("itc.select.change")),this._params.onSelected&&this._params.onSelected(this,null),""}},{key:"_changeValue",value:function(e){e.classList.contains(this.constructor.EL_OPTION_SELECTED)||(this._updateOption(e),this.hide())}},{key:"show",value:function(){var e=this;document.querySelectorAll(this.constructor.EL_SHOW).forEach((function(t){t.classList.remove(e.constructor.EL_SHOW)})),this._el.classList.add("".concat(this.constructor.EL_SHOW))}},{key:"hide",value:function(){this._el.classList.remove(this.constructor.EL_SHOW)}},{key:"toggle",value:function(){this._el.classList.contains(this.constructor.EL_SHOW)?this.hide():this.show()}},{key:"dispose",value:function(){this._el.removeEventListener("click",this._onClickFn)}},{key:"value",get:function(){return this._elToggle.value},set:function(e){var t=this,s=!1;this._el.querySelectorAll(".select__option").forEach((function(i){i.dataset.value===e&&(s=!0,t._updateOption(i))})),s||this._reset()}},{key:"selectedIndex",get:function(){return this._elToggle.dataset.index},set:function(e){var t=this._el.querySelector('.select__option[data-index="'.concat(e,'"]'));t&&this._updateOption(t),this._reset()}}])&&e(s.prototype,i),n&&e(s,n),Object.defineProperty(s,"prototype",{writable:!1}),t}();t(s,"EL","itc-select"),t(s,"EL_SHOW","itc-select_show"),t(s,"EL_OPTION","itc-select__option"),t(s,"EL_OPTION_SELECTED","itc-select__option_selected"),t(s,"DATA","[data-select]"),t(s,"DATA_TOGGLE",'[data-select="toggle"]'),s.hideOpenSelect(),document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelectorAll(".goods__item");console.log(e);var t=document.querySelector(".goods__btn-more"),s=document.body.clientWidth;console.log(s);var n=8,o=4;s<1200&&(n=6,o=3),s<968&&(n=6,o=4);var r=e.length;for(i=n;i<r;i++)e[i].classList.add("hidden"),console.log(i);t.addEventListener("click",(function(){n+=o;var s=Array.from(e),i=s.slice(0,n);console.log(s),i.forEach((function(e){return e.classList.remove("hidden")})),r===i.length&&t.classList.add("hidden")}));var c=document.querySelector(".header__burger"),l=document.querySelector(".header__burger-cls"),a=document.querySelector(".header__burger-menu");c.addEventListener("click",(function(){a.classList.toggle("burger-active"),console.log(a)})),l.addEventListener("click",(function(){a.classList.toggle("burger-active")}))}));new s("#select-2"),new s("#select-1",{name:"city",targetValue:"Москва",options:[["Москва","Москва"],["Казань","Казань"],["Уфа","Уфа"],["Пермь","Пермь"]]}),new Swiper("#swiper1",{direction:"horizontal",speed:600,loop:!0,slidesPerView:1,effect:"slide",autoplay:!0,pagination:{el:".swiper-pagination",clickable:!0}}),new Swiper("#swiper2",{direction:"horizontal",loop:!1,slidesPerView:3,effect:"slide",spaceBetween:32,slidesPerGroup:3,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},breakpoints:{320:{slidesPerView:1,spaceBetween:32,slidesPerGroup:1},480:{slidesPerView:2,spaceBetween:32,slidesPerGroup:2},1200:{slidesPerView:3,spaceBetween:32}}}),new Swiper("#swiper3",{direction:"horizontal",loop:!1,slidesPerView:2,effect:"slide",spaceBetween:32,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},breakpoints:{320:{slidesPerView:1,spaceBetween:32},580:{slidesPerView:2,spaceBetween:32},986:{slidesPerView:3,spaceBetween:32},1200:{slidesPerView:2,spaceBetween:32}}});tippy("#tooltip",{content:"Реплицированные с зарубежных источников, исследования формируют глобальную сеть.",placement:"top",animation:"scale-extreme"});new JustValidate(".callback__form");new JustValidate("#form",{errorFieldCssClass:"is-invalid"}).addField("#name",[{rule:"minLength",value:2,errorMessage:"Недопустимый формат"},{rule:"maxLength",value:30,errorMessage:"Недопустимый формат"},{rule:"required",errorMessage:"Вы не ввели имя"}]).addField("input[type=email]",[{rule:"required",errorMessage:"Вы не ввели e-mail"},{rule:"email",errorMessage:"E-mail не корректный"}]).addField("input[type=tel]",[{rule:"required",errorMessage:"Вы не ввели телефон"},{rule:"number",errorMessage:"Телефон не корректный"},{rule:"minLength",value:7,errorMessage:"Минимально 7 цифр"},{rule:"number",errorMessage:"Телефон не корректный"}]).addField("#agree",[{rule:"required",errorMessage:"Необходимо подтверждение"}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
